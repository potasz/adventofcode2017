package adventofcode2017.potasz

// http://adventofcode.com/2017/day/1
object Puzzle01 {
    val input = "349977448929146532968278716133885529936349351737335974749973934313241217189424846744921337364866195152" +
            "4682924847783654445194393883284815719922411656371564612643149356377211271474154663576466558645285834932665" +
            "8345524573681224829221829772728531278893357146638772291782796744812479595172578555931968285326741191558735" +
            "4919236825868441854765841246778568566125822632631247159164982546597613122252959473286718737295941826954258" +
            "5255971892281683281634125969576632235756525233585126493347155535153636394457276362176148994421778778556435" +
            "5131756948331413652646811626742168857634856234347432698931371757454156396432993421795675147273229642441888" +
            "7765171653759652889235153788717734497141893111678497885194792741726173343784126615748851569881715324833855" +
            "2834285135859979215433188934298516852818656287373611711324227186331887391735542839317315278322372736228216" +
            "9982597123525671895452937118687191281382949335937173323862618172284254741935865963877359477126188879481911" +
            "1488274537815467894373175815689314452599125412733533452541712525883446123866491345626387589153369763472912" +
            "1884874454875546249398187154394969733173557724365872211137155236317958454352114994424784817679357185516432" +
            "9415143753479297879926959141597695174674386467854776481689314612324534729187335368471697738925271618243312" +
            "8646564422999388867556799965682974989656516523379618378764685967494334546339757225619719354595549797133443" +
            "1329251144728893937936927948729955732613779821964639543624174275158136375289683389271354362796663378845538" +
            "4129347637693559713174477262914916598991823983686226378396341554219544683439536933338185723832743964258335" +
            "1639933241915892463995358454341678191354139164437649316683868172822798772642962628239992249439749744898927" +
            "7879965672345384913919494836899899553126122466947855935968916793462468162283493122372831824783213475858188" +
            "2736415334187562342375144693398771223127132562692525629392889723242374746911936313136382354858767169452656" +
            "2245191282878992648314635976634618571191323125786488948154173483645323728366216441762957769789427837147789" +
            "5486471954183217663389214784569375224856514779435786485996146291884747115824451627917834651412911732828513" +
            "2341339595664283"

    private val samples1 = listOf("1122", "1111", "1234", "91212129")
    private val results1 = listOf(3, 4, 0, 9)

    private val samples2 = listOf("1212", "1221", "123425", "123123", "12131415")
    private val results2 = listOf(6, 0, 4, 12, 4)


    fun doSolve(numbers: CharArray, f: (CharArray) -> Int): Int {
        val offset = f(numbers)
        return (0 until numbers.size)
                .filter { numbers[it] == numbers[(it + offset) % numbers.size] }
                .sumBy { numbers[it] - '0' }
    }

    private fun solve1(input: String): Int {
        return doSolve(input.toCharArray(), {1})
    }

    private fun solve2(input: String): Int {
        return doSolve(input.toCharArray(), {it.size / 2})
    }

    @JvmStatic
    fun main(args: Array<String>) {
        println("Part 1: (solution, reference)")
        samples1.zip(results1, { sample, result -> solve1(sample) to result }).forEach { println(it) }
        println("Solution 1: ${solve1(input)}")
        println()

        println("Part 2: (solution, reference)")
        samples2.zip(results2, { sample, result -> solve2(sample) to result }).forEach { println(it) }
        println("Solution 2: ${solve2(input)}")
    }
}
